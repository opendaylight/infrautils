{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_78026070",
        "filename": "caches/api/src/main/java/org/opendaylight/infrautils/caches/ops/CachePolicy.java",
        "patchSetId": 14
      },
      "lineNbr": 34,
      "author": {
        "id": 649
      },
      "writtenOn": "2017-02-09T15:35:20Z",
      "side": 1,
      "message": "ExtensionIdentifier extends yangtools.concepts.Identifier?\n\nStrings are not type-safe and lead to various magic constants all of the place",
      "range": {
        "startLine": 34,
        "startChar": 16,
        "endLine": 34,
        "endChar": 22
      },
      "revId": "0cd6dcc9cc3a827a130eae684bb026d8b01e35fb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_ee2a068f",
        "filename": "caches/api/src/main/java/org/opendaylight/infrautils/caches/ops/CachePolicy.java",
        "patchSetId": 14
      },
      "lineNbr": 34,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-04-12T16:35:26Z",
      "side": 1,
      "message": "NOK, wundo.  I totally know what you mean, and I\u0027m with you in general.  But: The idea of these extensions() I have is for implementation specific policy settings.  All I\u0027m intending, hoping, that String here will only ever be used in CLI commands and configuration property files and the like, NEVER by code - because they would bind themselves to an implementation - and there really should be no need for this, in code (in configurations, maybe).  Anything general that all cache impls will have, like maxEntries, will be statically typed here.  But no Cache API using code should ever need to set a policy that\u0027s specific to an impl.  And if I\u0027m wrong about this, then I\u0027d rather consider simply having an interface GuavaCachePolicy extends CachePolicy { int someTunableThingieThatOnlyGuavaHas() }.  But for the moment I\u0027m *NOT* intending to offer such CachePolicy sub types.  Other implementers could, if they really saw a need for it, of course...",
      "parentUuid": "fafc7978_78026070",
      "range": {
        "startLine": 34,
        "startChar": 16,
        "endLine": 34,
        "endChar": 22
      },
      "revId": "0cd6dcc9cc3a827a130eae684bb026d8b01e35fb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_5805dc78",
        "filename": "caches/api/src/main/java/org/opendaylight/infrautils/caches/ops/CachesMonitor.java",
        "patchSetId": 14
      },
      "lineNbr": 23,
      "author": {
        "id": 649
      },
      "writtenOn": "2017-02-09T15:35:20Z",
      "side": 1,
      "message": "Collection? i.e. do you care about .hashCode()/equals()?",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 8
      },
      "revId": "0cd6dcc9cc3a827a130eae684bb026d8b01e35fb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_ae72bee0",
        "filename": "caches/api/src/main/java/org/opendaylight/infrautils/caches/ops/CachesMonitor.java",
        "patchSetId": 14
      },
      "lineNbr": 23,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-04-12T16:35:26Z",
      "side": 1,
      "message": "OK; changed it, even to Iterable actually, which is more fitting, the ONLY point of this is to let a TBD CLI cmd get all CacheManager, to e.g. print stats and what not - nothing else.  No modifying operations like add() etc. anyway.  Thanks for noticing - and for your interest in this Gerrit!",
      "parentUuid": "fafc7978_5805dc78",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 8
      },
      "revId": "0cd6dcc9cc3a827a130eae684bb026d8b01e35fb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_d8d1ccfc",
        "filename": "caches/api/src/main/java/org/opendaylight/infrautils/caches/spi/CachesMonitorSPI.java",
        "patchSetId": 14
      },
      "lineNbr": 21,
      "author": {
        "id": 649
      },
      "writtenOn": "2017-02-09T15:35:20Z",
      "side": 1,
      "message": "Registry?",
      "range": {
        "startLine": 21,
        "startChar": 30,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "0cd6dcc9cc3a827a130eae684bb026d8b01e35fb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_6e48d687",
        "filename": "caches/api/src/main/java/org/opendaylight/infrautils/caches/spi/CachesMonitorSPI.java",
        "patchSetId": 14
      },
      "lineNbr": 21,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-04-12T16:35:26Z",
      "side": 1,
      "message": "OK, I like that .. you\u0027ve inspired me to make another change, and use CacheManagers (and thus CacheManagersRegistry) instead of CachesMonitor.  Thanks for the feedback, keep it coming...",
      "parentUuid": "fafc7978_d8d1ccfc",
      "range": {
        "startLine": 21,
        "startChar": 30,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "0cd6dcc9cc3a827a130eae684bb026d8b01e35fb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}