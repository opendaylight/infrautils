{
  "comments": [
    {
      "key": {
        "uuid": "da2a55be_2c84120b",
        "filename": "common/util/src/main/java/org/opendaylight/infrautils/utils/mdc/MDCs.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-07-26T15:42:04Z",
      "side": 1,
      "message": "“overwriting” ;-)",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_4a6fa6fd",
        "filename": "common/util/src/main/java/org/opendaylight/infrautils/utils/mdc/MDCs.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-07-27T09:19:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2a55be_2c84120b",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_cc64564b",
        "filename": "common/util/src/main/java/org/opendaylight/infrautils/utils/mdc/MDCs.java",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-07-26T15:42:04Z",
      "side": 1,
      "message": "I think this would be better:\n\n    if (oldValue !\u003d null \u0026\u0026 !oldValue.equals(val)) {\n\nThat way, multiple points in a code sequence can inject the same value (e.g. a correlation id) without breaking anything, but a change in MDC value will be caught. If we exclude all MDC writes with a pre-existing value, we’ll end up having to track on the client side whether a value has been written yet or not (or we’ll just find MDC.remove() before MDC.put() everywhere).",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_2a7232e5",
        "filename": "common/util/src/main/java/org/opendaylight/infrautils/utils/mdc/MDCs.java",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-07-27T09:19:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2a55be_cc64564b",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_0cb02ef3",
        "filename": "common/util/src/main/java/org/opendaylight/infrautils/utils/mdc/MDCs.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-07-26T15:42:04Z",
      "side": 1,
      "message": "Might as well use putCloseable() here, it’s designed for this:\n\n    try (MDC.MDCCloseable closeable \u003d MDC.putCloseable(key, val) {\n        runnable.run();\n    }\n\n(and extract the validation from MDCs.put()).\n\n(Although that ruins the nice common implementation with the putAll variant below...)",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_8542313c",
        "filename": "common/util/src/main/java/org/opendaylight/infrautils/utils/mdc/MDCs.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-07-27T09:19:21Z",
      "side": 1,
      "message": "I actually started like this, and then realized that MDCCloseable doesn\u0027t do anything \"smarter\" (like you could imagine it\u0027s smart enough to save a Map lookup and global lock contention to get the thread specific MDC...), but when I looked inside the MDC impl and saw it didn\u0027t; so thought there is no point .. in direct using code the Closeable style is nice, but inside a utility like this, there is not much of a point?  But fine, I\u0027ve now done it anyway.  One advantage I can think of is future copy/paste imposters seeing it here done the right way... ;-)",
      "parentUuid": "da2a55be_0cb02ef3",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_2c5c127e",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/MDCTest.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-07-26T15:42:04Z",
      "side": 1,
      "message": "This needs to be split, since one part of the test expects an exception and the other doesn’t.",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_257385b2",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/MDCTest.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-07-27T09:19:21Z",
      "side": 1,
      "message": "I didn\u0027t do it because I\u0027ve no business testing MDC, that\u0027s Ceki\u0027s job, not mine, and this was intended more as documentation for people reading this test.  But Done now - thanks for pointing it out.",
      "parentUuid": "da2a55be_2c5c127e",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_457e796c",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/MDCTest.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-07-27T09:27:26Z",
      "side": 1,
      "message": "Yeah, I know there are two sides to the argument. I definitely agree we shouldn’t be testing MDC! Basically this stumbles on the difference between “test code as demo code” (which is your original intent as I understand it, on top of the unit test of course) and plain unit test code.",
      "parentUuid": "da2a55be_257385b2",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_65929da0",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/MDCTest.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-07-27T09:31:26Z",
      "side": 1,
      "message": "so +1 [once it built] ? ;-)",
      "parentUuid": "da2a55be_457e796c",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_e5eded26",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/MDCTest.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-07-27T09:32:39Z",
      "side": 1,
      "message": "Let me finish my review... (I’ll fetch my Queen CDs and listen to “Under Pressure” while I’m at it :-P)",
      "parentUuid": "da2a55be_65929da0",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_a5e3f531",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/MDCTest.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-07-27T09:35:41Z",
      "side": 1,
      "message": "also wget \"how to do atomic reviews\", and comment in Draft and hit reply to post in bulk... ;-) [AKA \"I thought you were done reviewing\"]",
      "parentUuid": "da2a55be_e5eded26",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_0c5f8e73",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/MDCTest.java",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-07-26T15:42:04Z",
      "side": 1,
      "message": "As above.",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_65645de5",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/MDCTest.java",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-07-27T09:19:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2a55be_0c5f8e73",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_6c556a4f",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/OriginsTest.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-07-26T15:42:04Z",
      "side": 1,
      "message": "Origins doesn’t make any implementation guarantees, yet your test relies on the internal implementation detail...",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_caab961b",
        "filename": "common/util/src/test/java/org/opendaylight/infrautils/utils/mdc/OriginsTest.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-07-27T09:19:21Z",
      "side": 1,
      "message": "I see what you mean, but did intentionally mean for this to test to implementation.. if the impl ever does change, this will be adapted, and that\u0027s fine IMHO.  But I\u0027ve now added a new more simple trivial additional @Test which checks just what the API guarantees, and named both test methods appropriately. Hope OK for you like this?",
      "parentUuid": "da2a55be_6c556a4f",
      "revId": "7554d8b60deacdad8b1b34742930de27b6ac1b8a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}