{
  "comments": [
    {
      "key": {
        "uuid": "ba068154_f6fe916a",
        "filename": "ready/api/src/main/java/org/opendaylight/infrautils/ready/SystemReadyListener.java",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 649
      },
      "writtenOn": "2017-05-10T21:36:31Z",
      "side": 1,
      "message": "this is not sufficient. the system can become \u0027un-ready\u0027 the moment the user types in \u0027feature:install oh-i-forgot-this-feature\u0027",
      "range": {
        "startLine": 20,
        "startChar": 3,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_96090598",
        "filename": "ready/api/src/main/java/org/opendaylight/infrautils/ready/SystemReadyService.java",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 649
      },
      "writtenOn": "2017-05-10T21:36:31Z",
      "side": 1,
      "message": "ugh, strings to enumerate possible system states?\n\nhow does fully ready interact with:\n- asynchronous background service startup (such as state recovery)\n- cluster-wide service settlement (join cluster, settle singleton services)",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 49
      },
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_d62b8d2e",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-05-10T21:00:35Z",
      "side": 1,
      "message": "I\u0027m not sure about using test code in production.",
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_76f101cd",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-05-10T21:18:56Z",
      "side": 1,
      "message": "Erm.. I\u0027m not sure what exactly you mean, how do you define \"test code\" precisely?  The odlparent.bundles4test.TestBundleDiag stuff is currently initially just used by the build in SingleFeatureTest, yes, (and has been well tested there over the last few months!), but.. so what?  Ultimately it\u0027s still just... well, code.  It checks bundle state and what not.  Do you have any more specific actionable objection what problems using this could cause?  According to my initial local tests, this works just great! ;-) What\u0027s the actual issue you see with this?",
      "parentUuid": "ba068154_d62b8d2e",
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_5674bdfc",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-05-10T21:58:55Z",
      "side": 1,
      "message": "Just that TestBundleDiag (and I assume the entire bundles4test package) is intended for Junit tests. It could have junit assertions which we don\u0027t want leaking to production.  What else is in bundles4test package that might get pulled in that we may not want in production?  If you want to reuse code in TestBundleDiag in production, then I\u0027d rather see that code in a production bundle that TestBundleDiag calls. That\u0027s my 2 cents but if others are fine with it then OK.",
      "parentUuid": "ba068154_76f101cd",
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_f6269167",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-05-10T21:00:35Z",
      "side": 1,
      "message": "Since the executorService is only used to run this one task, I think it should be shutdown at the end of the run() method so the thread doesn\u0027t hang around dormant for the life of the process. In fact you could just create a Thread directly instead of using a single-threaded executor.",
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_56c5dd59",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-05-10T21:18:56Z",
      "side": 1,
      "message": "I was kind of anticipating future iterations here where this would kick in (again) and this would run again on the same Executor on new feature:install runs, after the initial boot.. but yes I could also change it to just use a new Thread directly, instead the first and each later (feature:install) time.. do other reviewers have any pro/con thoughts re. how to best do this for this usage scenario?",
      "parentUuid": "ba068154_f6269167",
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_b62c094c",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-05-10T21:00:35Z",
      "side": 1,
      "message": "I\u0027m not sure JVM Errors should be stopped here - particularly OutOfMemory which, from what I recall from past experience, has to be propagated to the JVM in order to generate a heap dump.",
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_3695b940",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-05-10T21:18:56Z",
      "side": 1,
      "message": "OK but how do you do that?  if you rethrow from here, it just goes into the uncaughtExceptionHandler of the Thread - not \"to the JVM\" (what does that mean?) .. As it\u0027s now, the org.opendaylight.infrautils.utils.concurrent.Executors uses org.opendaylight.infrautils.utils.concurrent.ThreadFactoryProvider which runs this in a Thread that has a org.opendaylight.infrautils.utils.concurrent.LoggingThreadUncaughtExceptionHandler .. but we anyway just logged it here, so AFAIK all a \"throw throwable\" here would add is to make the same appear twice in the log (which is always confusing), without adding any other real value.  Can you enlighten me what I am missing, so I can learn something?",
      "parentUuid": "ba068154_b62c094c",
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_967e25e3",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-05-10T21:58:55Z",
      "side": 1,
      "message": "As Robert commented in another patch set - Errors should be propagated.",
      "parentUuid": "ba068154_3695b940",
      "revId": "e2146e1da199264330f3459b44b4699dd963cdd2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}