{
  "comments": [
    {
      "key": {
        "uuid": "001c9f15_04444320",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 7867
      },
      "writtenOn": "2018-06-14T14:47:55Z",
      "side": 1,
      "message": "please use explicit imports",
      "range": {
        "startLine": 35,
        "startChar": 59,
        "endLine": 35,
        "endChar": 62
      },
      "revId": "9744caa78f730672918af875a044a4a4e83ce0a9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38cc2160_0c298066",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 7867
      },
      "writtenOn": "2018-06-14T14:47:55Z",
      "side": 1,
      "message": "WeakHashMap",
      "range": {
        "startLine": 49,
        "startChar": 18,
        "endLine": 49,
        "endChar": 23
      },
      "revId": "9744caa78f730672918af875a044a4a4e83ce0a9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55192bae_b027f316",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-06-14T15:02:17Z",
      "side": 1,
      "message": "We really should have a listener unregistration rather than use unreliable weak references.",
      "parentUuid": "38cc2160_0c298066",
      "range": {
        "startLine": 49,
        "startChar": 18,
        "endLine": 49,
        "endChar": 23
      },
      "revId": "9744caa78f730672918af875a044a4a4e83ce0a9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b74b09f7_ce14da71",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-06-14T15:02:17Z",
      "side": 1,
      "message": "changeState(SystemState newSate)",
      "revId": "9744caa78f730672918af875a044a4a4e83ce0a9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2443e079_3a30f42b",
        "filename": "ready/impl/src/main/java/org/opendaylight/infrautils/ready/internal/SystemReadyImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-06-14T15:02:17Z",
      "side": 1,
      "message": "It would be safest to capture currentSystemState in a local in the sync block to assure all listeners get a consistent view of the state but  stateChanged shouldn\u0027t be called concurrently so it doesn\u0027t matter.",
      "revId": "9744caa78f730672918af875a044a4a4e83ce0a9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}