{
  "comments": [
    {
      "key": {
        "uuid": "53fa2a3d_6a94fd96",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-20T13:56:05Z",
      "side": 1,
      "message": "mention what it enhances? ;-)\n\nmention INFRAUTILS-16",
      "revId": "6c440242bc0cc49623900642bda7ad5a7c70e158",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "148f283e_369b4912",
        "filename": "jobcoordinator/jobcoordinator-api/src/main/java/org/opendaylight/infrautils/jobcoordinator/JobCoordinator.java",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-20T13:56:05Z",
      "side": 1,
      "message": "JobCoordinatorTest should expand coverage with a new test for testing this return list of futures.  It is important to keep the existing tests as is, to \"prove\" that we are not breaking the existing API and code using it with this change.",
      "revId": "6c440242bc0cc49623900642bda7ad5a7c70e158",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbaa98ae_f8e95ff8",
        "filename": "jobcoordinator/jobcoordinator-api/src/main/java/org/opendaylight/infrautils/jobcoordinator/JobCoordinator.java",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 6328
      },
      "writtenOn": "2018-03-22T05:18:33Z",
      "side": 1,
      "message": "Would address this in the subsequent patches",
      "parentUuid": "148f283e_369b4912",
      "revId": "6c440242bc0cc49623900642bda7ad5a7c70e158",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b49cbc7_aa3247ef",
        "filename": "jobcoordinator/jobcoordinator-impl/src/main/java/org/opendaylight/infrautils/jobcoordinator/internal/JobEntry.java",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-20T13:56:05Z",
      "side": 1,
      "message": "nit pick just re format: remove weird leaving double space before class, as well as the space after JobEntry class name and \u003cT\u003e - they are typically glued together",
      "revId": "6c440242bc0cc49623900642bda7ad5a7c70e158",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f367065_d658d070",
        "filename": "jobcoordinator/jobcoordinator-impl/src/main/java/org/opendaylight/infrautils/jobcoordinator/internal/JobEntry.java",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 6328
      },
      "writtenOn": "2018-03-22T05:18:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b49cbc7_aa3247ef",
      "revId": "6c440242bc0cc49623900642bda7ad5a7c70e158",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d02c1167_628d591b",
        "filename": "jobcoordinator/jobcoordinator-impl/src/main/java/org/opendaylight/infrautils/jobcoordinator/internal/JobEntry.java",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-20T13:56:05Z",
      "side": 1,
      "message": "I\u0027m wondering if replacing the emptyList() by a singletonList(SettableFuture.create()) is right.. I\u0027m not saying yet that this is wrong, but why is this needed?  And why now and in this change?  At the very least, this should be introduced via TDD, with a (new) test in JobCoordinatorTest that illustrates what is expected and how emptyList() is wrong, and fails, and then with the fix for that by changing it to singletonList(SettableFuture.create()).  Probably best in a small separate new change, if this does not (directly) related to the INFRAUTILS-16 other changes here?",
      "revId": "6c440242bc0cc49623900642bda7ad5a7c70e158",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d95d5a6_24805657",
        "filename": "jobcoordinator/jobcoordinator-impl/src/main/java/org/opendaylight/infrautils/jobcoordinator/internal/JobEntry.java",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 6328
      },
      "writtenOn": "2018-03-22T05:18:33Z",
      "side": 1,
      "message": "The applications would wait and act upon the future result we get on enqueueJob(). The listenablefuture returned would be an empty list till the job is executed(waiting in the queue). So, instead creating a pending future object(Settablefuture.create()) which would later be replaced the actual result future upon the execution of the callable. Is there a better way of achieving this(enqueueJob should return a future right after the call rather than when the enqueued job is actually executed)?",
      "parentUuid": "d02c1167_628d591b",
      "revId": "6c440242bc0cc49623900642bda7ad5a7c70e158",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14b074e3_0829aca4",
        "filename": "jobcoordinator/jobcoordinator-impl/src/main/java/org/opendaylight/infrautils/jobcoordinator/internal/JobEntry.java",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-20T13:56:05Z",
      "side": 1,
      "message": "nit pick just re format: This seems to be indented wrong?",
      "revId": "6c440242bc0cc49623900642bda7ad5a7c70e158",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c86766bf_dffe7128",
        "filename": "jobcoordinator/jobcoordinator-impl/src/main/java/org/opendaylight/infrautils/jobcoordinator/internal/JobEntry.java",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 6328
      },
      "writtenOn": "2018-03-22T05:18:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14b074e3_0829aca4",
      "revId": "6c440242bc0cc49623900642bda7ad5a7c70e158",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}