{
  "comments": [
    {
      "key": {
        "uuid": "b4db68c4_df938801",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/Labeled.java",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-24T22:07:22Z",
      "side": 1,
      "message": "2018 - need to update your eclipse template (you don\u0027t use ${year}?).",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29b91bd1_e6139f6a",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/Labeled.java",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-25T17:46:12Z",
      "side": 1,
      "message": "Done.  Had no idea about ${year} ... thanks! FYI fixed permanently in https://github.com/vorburger/opendaylight-eclipse-setup/commit/aa2bcd4f5cb8d1e3d6d88d940ae55a9bb69e0cad",
      "parentUuid": "b4db68c4_df938801",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67da23ea_4c12c388",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/Labeled.java",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-24T22:07:22Z",
      "side": 1,
      "message": "This looks like a factory that creates new instances of T so can we name it \"newInstance\" for clarity.  \"label\" seems like it would  return a label.",
      "range": {
        "startLine": 19,
        "startChar": 6,
        "endLine": 19,
        "endChar": 11
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d6b5657_ac2e3a4b",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/Labeled.java",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-25T17:46:12Z",
      "side": 1,
      "message": "NOK. Wehl... no.  Have a look at the new class MetricsExample usage.  So this is intended to be used like a builder, and I\u0027m hoping this:\n\n    metricProvider.newMeter(..., \"port\").label(\"123\");\n\nis better and clearer than this:\n\n    metricProvider.newMeter(..., \"port\").newInstance(\"123\");\n\nDo you agree?",
      "parentUuid": "67da23ea_4c12c388",
      "range": {
        "startLine": 19,
        "startChar": 6,
        "endLine": 19,
        "endChar": 11
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b86cd8c0_541e009e",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/Labeled.java",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-25T18:04:54Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "4d6b5657_ac2e3a4b",
      "range": {
        "startLine": 19,
        "startChar": 6,
        "endLine": 19,
        "endChar": 11
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47df5f2b_387dcab7",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-24T22:07:22Z",
      "side": 1,
      "message": "\"lableName\" (there is no second etc)?",
      "range": {
        "startLine": 49,
        "startChar": 64,
        "endLine": 49,
        "endChar": 78
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0fe5c9a_cebb3132",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-24T22:07:22Z",
      "side": 1,
      "message": "I think I\u0027m clear on what a Labeled\u003cMeter\u003e is - it\u0027s more or less a factory for creating Meters that share a common base label/id ...",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6153a1c_fcf6e7a6",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-25T17:46:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47df5f2b_387dcab7",
      "range": {
        "startLine": 49,
        "startChar": 64,
        "endLine": 49,
        "endChar": 78
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c5d870e_eef63605",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-24T22:07:22Z",
      "side": 1,
      "message": "...but Labeled\u003cLabeled\u003cMeter\u003e\u003e  looks a bit confusing...",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fa20d60_73bb70ca",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-25T17:46:12Z",
      "side": 1,
      "message": "does the new class MetricsExample help to clarify?",
      "parentUuid": "5c5d870e_eef63605",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4e1e4bd_a0d8db4a",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-24T22:07:22Z",
      "side": 1,
      "message": ".. and even more so here.",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ded71bf2_05609bd7",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-24T22:52:22Z",
      "side": 1,
      "message": "I think this probably looks much more confusing here than it is to use in practice... let me do one thing, and first thing add an example / test illustrating how this would be used? That will help to clarify...",
      "parentUuid": "b4e1e4bd_a0d8db4a",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3945ea6_9813522b",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-25T17:46:12Z",
      "side": 1,
      "message": "does the new class MetricsExample help?",
      "parentUuid": "ded71bf2_05609bd7",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4557eeb0_5ac182ff",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-24T22:07:22Z",
      "side": 1,
      "message": "I\u0027m wondering if we can incorporate the optional label names into \nMetricDescriptor, eg:\n\n  public abstract String labels(String... labelNames);\n\nthen in Labeled:\n\n  T newInstance(String... labels);\n\nOr have separate newInstance methods for 1, 2 , 3 labels.",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c057fa3_b74e58af",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-24T22:52:22Z",
      "side": 1,
      "message": "The trouble with String... labelNames is that then you can only runtime not compile time check the matching of label names and values.  Again, let me add some usage examples, to clarify..",
      "parentUuid": "4557eeb0_5ac182ff",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c66f19da_df56c06e",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-24T23:08:40Z",
      "side": 1,
      "message": "yeah - that\u0027\u0027s why I also suggested overloaded methods for 1, 2 , 3 labels on Labeled instead of newMeter. My initial thought is that MetricDescriptor should contain all the descriptor config rather than passing a  MetricDescriptor plus additional descriptor info to newMeter.",
      "parentUuid": "1c057fa3_b74e58af",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "decb94df_a3479a80",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 7865
      },
      "writtenOn": "2018-01-25T04:49:12Z",
      "side": 1,
      "message": "\u003e yeah - that\u0027\u0027s why I also suggested overloaded methods for 1, 2 , 3\n \u003e labels on Labeled instead of newMeter. My initial thought is that\n \u003e MetricDescriptor should contain all the descriptor config rather\n \u003e than passing a  MetricDescriptor plus additional descriptor info to\n \u003e newMeter.\n\nI agree with Tom. If MetricDescriptor acts as a single point of including metadata like module, id and any other String holder for naming the metric at Dropwizard level, it would be more intuitive for consumers from API perspective",
      "parentUuid": "c66f19da_df56c06e",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88dd05d8_cd377a1c",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-25T12:39:29Z",
      "side": 1,
      "message": "What would be the use case for multiple labels anyway? In looking at other patches where this would be used, I don\u0027t see where they would need 2 or 3 labels.",
      "parentUuid": "decb94df_a3479a80",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39a6d2c6_65b3b7c6",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-25T17:46:12Z",
      "side": 1,
      "message": "Erm... you sure? Unless I misunderstood, to me e.g. https://git.opendaylight.org/gerrit/#/c/67237/8/interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/IfmUtil.java looks like 4 labels, and https://git.opendaylight.org/gerrit/#/c/67268/10/vpnservice/bgpmanager/bgpmanager-impl/src/main/java/org/opendaylight/netvirt/bgpmanager/BgpUtil.java like 5 and https://git.opendaylight.org/gerrit/#/c/67272/8/fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/FcapsUtil.java for 2 labels...",
      "parentUuid": "88dd05d8_cd377a1c",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48719a0c_ecf748c6",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-25T17:46:12Z",
      "side": 1,
      "message": "Tom \u0026 Mutu, I\u0027ve tried what you are suggesting, but failed... I\u0027m struggling how to do this, in a Java API.  The MetricDescriptor is a Builder (implemented using an http://Immutables.org Staged Builder), and its build() method has to return 1 specific given type.  What we would want here is return different types depending on how many labels the metric has... I cannot see how to do this - but if you do, could you please raise a new follow-up Gerrit change illustrating in code that compiles :) how you would do that?  Make sure that you look at, and accordingly adapt, the new class MetricsExample.  Do maintain static type safety... a String... labelNames would work of course, but I don\u0027t want that, because then you have to check at runtime if people have supplied matching number of label names and values, that\u0027s less nice than this approach.",
      "parentUuid": "decb94df_a3479a80",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1230534_b1a37fda",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-24T22:07:22Z",
      "side": 1,
      "message": "Can you add javadocs for all these methods?",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5b63dda_93e50063",
        "filename": "metrics/api/src/main/java/org/opendaylight/infrautils/metrics/MetricProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-25T17:46:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1230534_b1a37fda",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b5b30a8_c2bdcbf3",
        "filename": "metrics/impl/src/main/java/org/opendaylight/infrautils/metrics/internal/MetricProviderImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 7865
      },
      "writtenOn": "2018-01-25T04:49:12Z",
      "side": 1,
      "message": "Since it is very specific backend for dropwizard, can this be http://metrics.dropwizard.io/3.1.0/apidocs/com/codahale/metrics/MetricRegistry.html#name-java.lang.String-java.lang.String...-\n\nOr we want to keep this method as much away from any specific backend as possible ?",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ffbb740_aaf9630a",
        "filename": "metrics/impl/src/main/java/org/opendaylight/infrautils/metrics/internal/MetricProviderImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-25T17:46:12Z",
      "side": 1,
      "message": "Done, sure, can do \u0026 done. I suspect it makes little difference because that method mainly seems to \"elide any null values or empty strings\", which we\u0027ll have here (because MetricDescriptor\u0027s check() method validates it, before we get here), but why not, it won\u0027t hurt, either. Andit\u0027s find to use specific backend in this class here - we\u0027re in impl, not API.  (The alternative implementation for https://prometheus.io, as well as the test implementation in https://git.opendaylight.org/gerrit/#/c/67569/, will both be in a completely separate new bundle instead; so there is no mix up possible.)",
      "parentUuid": "7b5b30a8_c2bdcbf3",
      "revId": "cc44c38f929ac097fbb8fc92621bccfffa3c17cb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}